#!/usr/bin/env python
#
# groups - groups(1) command written in Python
# Copyright (C) 2007, 2008, 2009  David Cantrell <david.l.cantrell@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

ver = (2, 0)

import getpass
import grp
import os
import pwd
import sys

def usage(cmd):
    sys.stdout.write("Usage: %s [OPTIONS]... [USERNAME]..n\n" % (cmd,))
    sys.stdout.write("      --help     display this help and exit\n")
    sys.stdout.write("      --version  output version information and exit\n\n")
    sys.stdout.write("Same as id -Gn.  If no USERNAME, user current process.\n")

def xgroups(userlist=[]):
    ret = {}
    groups = grp.getgrall()

    for user in userlist:
        try:
            pwent = pwd.getpwnam(user)
        except KeyError:
            sys.stderr.write("%s: %s: No such user\n" % \
                             (os.path.basename(sys.argv[0]), user,))
        else:
            ret[user] = []
            tmpGroups = set()

            for group in grp.getgrall():
                if user in group.gr_mem:
                    tmpGroups.add(group.gr_name)

            ret[user] = list(tmpGroups)

    return ret

def main():
    prog = os.path.basename(sys.argv[0])

    if len(sys.argv) == 1:
        sys.argv.append(getpass.getuser())

    if sys.argv[1] == "--help":
        usage(prog)
        sys.exit(0)
    elif sys.argv[1] == "--version":
        sys.stdout.write("pycoreutils %s version %d.%d\n" % \
                         (prog, ver[0], ver[1],))
        sys.exit(0)
    else:
        userlist = sys.argv[1:]

        if len(userlist):
            grouplist = xgroups(userlist)

            if len(grouplist) == 1:
                (k, v) = grouplist.items()[0]
                sys.stdout.write("%s\n" % (" ".join(v),))
            elif len(grouplist) > 1:
                for (k, v) in grouplist.items():
                    sys.stdout.write("%s : %s\n" % (k, " ".join(v),))

        sys.exit(0)

if __name__ == "__main__":
    main()
